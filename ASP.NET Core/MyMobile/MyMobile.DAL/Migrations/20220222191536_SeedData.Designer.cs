// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMobile.DAL.Data;

#nullable disable

namespace MyMobile.DAL.Migrations
{
    [DbContext(typeof(MyMobileContext))]
    [Migration("20220222191536_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ConditionId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("DefaultPriceBgn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.Property<decimal>("UserPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RegionId");

                    b.HasIndex("TownId");

                    b.ToTable("CarAds");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Car"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Jeep"
                        });
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conditions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Used"
                        },
                        new
                        {
                            Id = 2,
                            Type = "New"
                        });
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BGN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "EUR"
                        });
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Plovdiv"
                        });
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Towns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asenovgrad",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sadovo",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Karlovo",
                            RegionId = 1
                        });
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAd", b =>
                {
                    b.HasOne("MyMobile.DAL.Models.CarAd.CarAdArgs.Category", "Category")
                        .WithMany("CarAds")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMobile.DAL.Models.CarAd.CarAdArgs.Condition", "Condition")
                        .WithMany("CarAds")
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMobile.DAL.Models.CarAd.CarAdArgs.Currency", "Currency")
                        .WithMany("CarAds")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMobile.DAL.Models.CarAd.CarAdArgs.Region", "Region")
                        .WithMany("CarAds")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMobile.DAL.Models.CarAd.CarAdArgs.Town", "Town")
                        .WithMany("CarAds")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Condition");

                    b.Navigation("Currency");

                    b.Navigation("Region");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Town", b =>
                {
                    b.HasOne("MyMobile.DAL.Models.CarAd.CarAdArgs.Region", "Region")
                        .WithMany("Towns")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Category", b =>
                {
                    b.Navigation("CarAds");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Condition", b =>
                {
                    b.Navigation("CarAds");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Currency", b =>
                {
                    b.Navigation("CarAds");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Region", b =>
                {
                    b.Navigation("CarAds");

                    b.Navigation("Towns");
                });

            modelBuilder.Entity("MyMobile.DAL.Models.CarAd.CarAdArgs.Town", b =>
                {
                    b.Navigation("CarAds");
                });
#pragma warning restore 612, 618
        }
    }
}
